FROM rocker/tidyverse:3.5.2

#### cuda base ##########

## Adapted from nvidia/cuda:9.0-base (A ubuntu16.04-based image)
## Sources at https://gitlab.com/nvidia/cuda/blob/ubuntu16.04/9.0/runtime/Dockerfile
## Commit f7625b4242bb8206fc1f76a321efae930a7f3554
RUN apt-get update && apt-get install -y --no-install-recommends ca-certificates apt-transport-https gnupg2 curl dirmngr && \
    rm -rf /var/lib/apt/lists/* && \
#    NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 && \
    NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 && \
    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub && \
    apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +5 > cudasign.pub && \
#    echo "$NVIDIA_GPGKEY_SUM  cudasign.pub" | sha256sum -c --strict - && rm cudasign.pub && \
    echo "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64 /" > /etc/apt/sources.list.d/cuda.list && \
    echo "deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /" > /etc/apt/sources.list.d/nvidia-ml.list

ENV CUDA_VERSION 9.0.176
ENV CUDA_PKG_VERSION 9-0=$CUDA_VERSION-1
RUN apt-get update && apt-get install -y --no-install-recommends \
        cuda-cudart-$CUDA_PKG_VERSION && \
    ln -s cuda-9.0 /usr/local/cuda && \
    rm -rf /var/lib/apt/lists/*

# nvidia-docker 1.0
LABEL com.nvidia.volumes.needed="nvidia_driver"
LABEL com.nvidia.cuda.version="${CUDA_VERSION}"

RUN echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf && \
    echo "/usr/local/nvidia/lib64" >> /etc/ld.so.conf.d/nvidia.conf

ENV PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
ENV LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64

# nvidia-container-runtime
ENV NVIDIA_VISIBLE_DEVICES all
ENV NVIDIA_DRIVER_CAPABILITIES compute,utility
ENV NVIDIA_REQUIRE_CUDA "cuda>=9.0"

######### runtime ########
## Adapted from nvidia/cuda:9.0-runtime
## Sources at https://gitlab.com/nvidia/cuda/blob/ubuntu16.04/9.0/runtime/Dockerfile
ENV NCCL_VERSION 2.4.2

RUN apt-get update && apt-get install -y --no-install-recommends \
        cuda-libraries-$CUDA_PKG_VERSION \
        cuda-cublas-9-0=9.0.176.4-1 \
        libnccl2=$NCCL_VERSION-1+cuda9.0 && \
    apt-mark hold libnccl2 && \
    rm -rf /var/lib/apt/lists/*


####### cudnn7 ##########
## Adapted from nvidia/cuda:9.0-cudnn7
## Sources at https://gitlab.com/nvidia/cuda/blob/ubuntu16.04/9.0/runtime/cudnn7/Dockerfile
ENV CUDNN_VERSION 7.4.2.24
LABEL com.nvidia.cudnn.version="${CUDNN_VERSION}"

RUN apt-get update && apt-get install -y --no-install-recommends \
            libcudnn7=$CUDNN_VERSION-1+cuda9.0 && \
    apt-mark hold libcudnn7 && \
    rm -rf /var/lib/apt/lists/*


####### Set up env variables in R #######
ENV CUDA_HOME=/usr/local/cuda
ENV CUDA_PATH=/usr/local/cuda
ENV PATH=$CUDA_HOME/bin:$PATH
ENV LD_LIBRARY_PATH=$CUDA_HOME/lib64:$CUDA_HOME/extras/CUPTI/lib64:$LD_LIBRARY_PATH

RUN echo "rsession-ld-library-path=$LD_LIBRARY_PATH" | \
    tee -a /etc/rstudio/rserver.conf && \
    echo "\n\
          \nCUDA_HOME=$CUDA_HOME \
          \nCUDA_PATH=$CUDA_PATH \
          \nPATH=$PATH" \
          >> /usr/local/lib/R/etc/Renviron

## Allow R to use CUDA for BLAS, with fallback on openblas
RUN echo "NVBLAS_LOGFILE nvblas.log \
          \nNVBLAS_CPU_BLAS_LIB /usr/lib/libopenblas.so \
          \nNVBLAS_GPU_LIST ALL" > /etc/nvblas.conf

ENV NVBLAS_CONFIG_FILE=/etc/nvblas.conf

## We don't want to set LD_PRELOAD globally
ENV /usr/local/cuda/lib64/libnvblas.so.9.0.176=/usr/local/cuda/lib64/libnvblas.so.9.0.176

RUN mv /usr/local/bin/R /usr/local/bin/R_ && \
    mv /usr/local/bin/Rscript /usr/local/bin/Rscript_ && \
    echo '\#!/bin/sh \
          \n LD_PRELOAD=/usr/local/cuda/lib64/libnvblas.so.9.0.176 /usr/local/bin/R_ "$@"' \
      > /usr/local/bin/R && \
    chmod +x /usr/local/bin/R && \
    echo '#!/bin/sh \
          \n LD_PRELOAD=/usr/local/cuda/lib64/libnvblas.so.9.0.176 /usr/local/bin/Rscript_ "$@"' \
      > /usr/local/bin/Rscript && \
    chmod +x /usr/local/bin/Rscript

RUN echo '#!/usr/bin/with-contenv bash \
          \n## load /etc/environment vars first: \
          \n for line in \$( cat /etc/environment ) ; do export $line ; done \
          \n export LD_PRELOAD=/usr/local/cuda/lib64/libnvblas.so.9.0.176 \
          \n exec /usr/lib/rstudio-server/bin/rserver --server-daemonize 0' \
        > /etc/services.d/rstudio/run


